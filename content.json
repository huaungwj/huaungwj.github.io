{"meta":{"title":"WeiBo | 筱海乄","subtitle":"","description":"代码路上雾漫漫","author":"筱海","url":"https://huaungwj.github.io","root":"/"},"pages":[{"title":"categories","date":"2020-04-07T12:11:37.000Z","updated":"2020-04-07T12:11:37.267Z","comments":true,"path":"categories/index-1.html","permalink":"https://huaungwj.github.io/categories/index-1.html","excerpt":"","text":""},{"title":"分类","date":"2020-04-07T02:11:54.000Z","updated":"2020-04-07T02:15:02.069Z","comments":true,"path":"categories/index.html","permalink":"https://huaungwj.github.io/categories/index.html","excerpt":"","text":""},{"title":"archives","date":"2020-04-07T12:11:46.000Z","updated":"2020-04-07T12:11:46.731Z","comments":true,"path":"archives/index.html","permalink":"https://huaungwj.github.io/archives/index.html","excerpt":"","text":""},{"title":"home","date":"2020-04-07T12:11:06.000Z","updated":"2020-04-07T12:11:06.771Z","comments":true,"path":"home/index.html","permalink":"https://huaungwj.github.io/home/index.html","excerpt":"","text":""},{"title":"friends","date":"2020-04-10T03:01:11.000Z","updated":"2020-04-10T03:01:11.226Z","comments":true,"path":"friends/index.html","permalink":"https://huaungwj.github.io/friends/index.html","excerpt":"","text":""},{"title":"标签","date":"2020-04-10T02:56:08.000Z","updated":"2020-04-10T02:57:32.855Z","comments":true,"path":"tages/index.html","permalink":"https://huaungwj.github.io/tages/index.html","excerpt":"","text":""},{"title":"about","date":"2020-04-10T02:58:15.000Z","updated":"2020-04-10T02:59:53.142Z","comments":true,"path":"about/index.html","permalink":"https://huaungwj.github.io/about/index.html","excerpt":"","text":""},{"title":"前端","date":"2020-04-06T13:10:11.000Z","updated":"2020-04-07T11:59:43.348Z","comments":true,"path":"md _cype/index.html","permalink":"https://huaungwj.github.io/md%20_cype/index.html","excerpt":"","text":""},{"title":"tags","date":"2020-04-07T12:11:22.000Z","updated":"2020-04-07T12:11:22.672Z","comments":true,"path":"tags/index-2.html","permalink":"https://huaungwj.github.io/tags/index-2.html","excerpt":"","text":""},{"title":"tags","date":"2020-04-07T11:54:46.000Z","updated":"2020-04-07T11:54:46.207Z","comments":true,"path":"tags/index-1.html","permalink":"https://huaungwj.github.io/tags/index-1.html","excerpt":"","text":""},{"title":"标签","date":"2020-04-07T02:17:08.000Z","updated":"2020-04-11T05:12:30.350Z","comments":true,"path":"tags/index.html","permalink":"https://huaungwj.github.io/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"pjax","slug":"pjax","date":"2020-04-10T12:40:26.000Z","updated":"2020-04-11T12:06:03.858Z","comments":true,"path":"2020/04/10/pjax/","link":"","permalink":"https://huaungwj.github.io/2020/04/10/pjax/","excerpt":"实现pjax感谢大佬的博客开源，让我能参考源代码进行修改：pjax使用感谢大佬的讲解 ：用pjax让你的页面加载飞起来！","text":"实现pjax感谢大佬的博客开源，让我能参考源代码进行修改：pjax使用感谢大佬的讲解 ：用pjax让你的页面加载飞起来！ 在layout/_partial/head.ejs的末尾 的上方引用pjax 1&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;pjax&#x2F;pjax.js&quot;&gt;&lt;&#x2F;script&gt; 在layout/layout.ejs的末尾的上方插入代码 1234567891011&lt;script&gt;var pjax &#x3D; new Pjax(&#123; elements: &quot;a&quot;, selectors: [ &quot;title&quot;, &#x2F;&#x2F;pjax加载标题 &quot;.l_main&quot;, &#x2F;&#x2F;pjax加载主内容 &quot;.l_side&quot;, &#x2F;&#x2F;pjax加载侧边栏 &quot;.switcher .h-list&quot;, &#x2F;&#x2F; 使手机端的搜索框与菜单栏生效 ]&#125;)&lt;&#x2F;script&gt; elements选择触发器，即点击什么来触发pjax（只能用a或者form），a为链接。 selectors根据css选择器来选择更新的节点（即当触发elements时哪些内容会刷新，其余部分保持不变）可以用节点、类、id等选择元素。用法参考：css选择器这里我设置的为：点击链接，则刷新标题、类为l_main与l_side的元素（页面内容与侧边栏）会刷新，其余不变。 pjax优化-自动生成Fancybox在定义pjax的脚本代码中插入语句（放在与中） 123456789101112131415161718192021&#x2F;&#x2F;加载fancyboxfunction LoadFancybox()&#123; $(&quot;.article-entry&quot;).find(&quot;img&quot;).each(function () &#123; &#x2F;&#x2F;渲染fancy box var t &#x3D; document.createElement(&quot;a&quot;); $(t).attr(&quot;data-fancybox&quot;, &quot;gallery&quot;), $(t).attr(&quot;href&quot;, $(this).attr(&quot;src&quot;)), $(t).attr(&quot;margin&quot;,&quot;0 auto&quot;), $(this).wrap(t) &#125;)&#125;&#x2F;&#x2F; pjax加载结束后执行函数document.addEventListener(&#39;pjax:complete&#39;, function ()&#123; LoadFancybox();&#125;);&#x2F;&#x2F; 窗口监听load(加载、刷新)事件，执行LoadFancybox()函数window.addEventListener(&#39;load&#39;,function()&#123; LoadFancybox();&#125;); 插入后结果如图：修改后发现实现了fancybox，但是图片不再居中，故进行修改。 打开source/css/_layout/main.styl 搜索img 找到位于l_main&gt;post&gt;a下的img，将display: inline注释 BUG:- 放大图片再关闭后，页面位置与放大前不对应，会返回到放大前一张图片时的位置 。实现pjax后发现导航栏在点击不同部分时，主题的下划线不会改变，进行修改没有修改成，故直接将CSS代码注释 打开source/css/_layout/navbar.styl 搜索&amp;:active,&amp;.active 将该部分代码注释 pjax刷新评论问题：实现pjax后发现通过pjax刷新页面后评论无法成功加载，推测是因为评论由js脚本引入，pjax刷新页面不会加载js。解决思路：当pjax执行完成后再次调用评论js脚本来生成评论。 在pjax脚本中插入以下代码，其中调用脚本的方式有两种，用哪一个都可以。 12345678910111213141516171819202122232425262728293031323334function LoadValine()&#123; &#x2F;&#x2F; 两种调用方式，一个调用配置里的js路径，一个调用本地，用哪个都可以 &#x2F;&#x2F; $.getScript(&quot;&lt;%&#x3D; theme.comments.valine.js %&gt;&quot;, function() &#123; $.getScript(&quot;&#x2F;js&#x2F;Valine.js&quot;, function() &#123; &#x2F;&#x2F; 生成评论的代码 var GUEST_INFO &#x3D; [&#39;nick&#39;,&#39;mail&#39;,&#39;link&#39;]; var guest_info &#x3D; &#39;&lt;%&#x3D; theme.comments.valine.meta %&gt;&#39;.split(&#39;,&#39;).filter(function(item)&#123; return GUEST_INFO.indexOf(item) &gt; -1 &#125;); var notify &#x3D; &#39;&lt;%&#x3D; theme.comments.valine.notify %&gt;&#39; &#x3D;&#x3D; true; var verify &#x3D; &#39;&lt;%&#x3D; theme.comments.valine.verify %&gt;&#39; &#x3D;&#x3D; true; var valine &#x3D; new Valine(); valine.init(&#123; el: &#39;#valine_container&#39;, notify: notify, verify: verify, guest_info: guest_info, &lt;% if (page.valine &amp;&amp; page.valine.path) &#123; %&gt; path: &quot;&lt;%&#x3D; page.valine.path %&gt;&quot;, &lt;% &#125; else if (theme.comments.valine.path) &#123; %&gt; path: &quot;&lt;%&#x3D; theme.comments.valine.path %&gt;&quot;, &lt;% &#125; %&gt; appId: &quot;&lt;%&#x3D; theme.comments.valine.appId %&gt;&quot;, appKey: &quot;&lt;%&#x3D; theme.comments.valine.appKey %&gt;&quot;, placeholder: &quot;&lt;%&#x3D; (page.valine &amp;&amp; page.valine.placeholder) ? page.valine.placeholder : theme.comments.valine.placeholder %&gt;&quot;, pageSize:&#39;&lt;%&#x3D; theme.comments.valine.pageSize %&gt;&#39;, avatar:&#39;&lt;%&#x3D; theme.comments.valine.avatar %&gt;&#39;, lang:&#39;&lt;%&#x3D; theme.comments.valine.lang %&gt;&#39;, visitor: &#39;&lt;%- theme.comments.valine.visitor %&gt;&#39;, highlight:&#39;&lt;%&#x3D; theme.comments.valine.highlight %&gt;&#39; &#125;) &#125;);&#125; 然后在监听pjax完成后的函数里调用函数 123456&#x2F;&#x2F; 加载pjax后执行的函数document.addEventListener(&#39;pjax:complete&#39;, function ()&#123; LoadFancybox(); &#x2F;&#x2F; 调用刚刚设置的函数 LoadValine();&#125;); 结果应该如图：源码位置： layout_partial\\scripts.ejs，上述代码中生成评论的部分即红框内的部分","categories":[],"tags":[{"name":"建站","slug":"建站","permalink":"https://huaungwj.github.io/tags/%E5%BB%BA%E7%AB%99/"}]},{"title":"Hexo NexT主题添加点击爱心效果","slug":"clicklove","date":"2020-04-08T03:29:13.000Z","updated":"2020-04-10T12:41:06.918Z","comments":true,"path":"2020/04/08/clicklove/","link":"","permalink":"https://huaungwj.github.io/2020/04/08/clicklove/","excerpt":"1.创建js文件在/themes/next/source/js/src下新建文件 clicklove.js ，接着把该链接下的代码拷贝粘贴到 clicklove.js 文件中。代码如下:","text":"1.创建js文件在/themes/next/source/js/src下新建文件 clicklove.js ，接着把该链接下的代码拷贝粘贴到 clicklove.js 文件中。代码如下: 1!function(e,t,a)&#123;function n()&#123;c(&quot;.heart&#123;width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);&#125;.heart:after,.heart:before&#123;content: &#39;&#39;;width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: fixed;&#125;.heart:after&#123;top: -5px;&#125;.heart:before&#123;left: -5px;&#125;&quot;),o(),r()&#125;function r()&#123;for(var e&#x3D;0;e&lt;d.length;e++)d[e].alpha&lt;&#x3D;0?(t.body.removeChild(d[e].el),d.splice(e,1)):(d[e].y--,d[e].scale+&#x3D;.004,d[e].alpha-&#x3D;.013,d[e].el.style.cssText&#x3D;&quot;left:&quot;+d[e].x+&quot;px;top:&quot;+d[e].y+&quot;px;opacity:&quot;+d[e].alpha+&quot;;transform:scale(&quot;+d[e].scale+&quot;,&quot;+d[e].scale+&quot;) rotate(45deg);background:&quot;+d[e].color+&quot;;z-index:99999&quot;);requestAnimationFrame(r)&#125;function o()&#123;var t&#x3D;&quot;function&quot;&#x3D;&#x3D;typeof e.onclick&amp;&amp;e.onclick;e.onclick&#x3D;function(e)&#123;t&amp;&amp;t(),i(e)&#125;&#125;function i(e)&#123;var a&#x3D;t.createElement(&quot;div&quot;);a.className&#x3D;&quot;heart&quot;,d.push(&#123;el:a,x:e.clientX-5,y:e.clientY-5,scale:1,alpha:1,color:s()&#125;),t.body.appendChild(a)&#125;function c(e)&#123;var a&#x3D;t.createElement(&quot;style&quot;);a.type&#x3D;&quot;text&#x2F;css&quot;;try&#123;a.appendChild(t.createTextNode(e))&#125;catch(t)&#123;a.styleSheet.cssText&#x3D;e&#125;t.getElementsByTagName(&quot;head&quot;)[0].appendChild(a)&#125;function s()&#123;return&quot;rgb(&quot;+~~(255*Math.random())+&quot;,&quot;+~~(255*Math.random())+&quot;,&quot;+~~(255*Math.random())+&quot;)&quot;&#125;var d&#x3D;[];e.requestAnimationFrame&#x3D;function()&#123;return e.requestAnimationFrame||e.webkitRequestAnimationFrame||e.mozRequestAnimationFrame||e.oRequestAnimationFrame||e.msRequestAnimationFrame||function(e)&#123;setTimeout(e,1e3&#x2F;60)&#125;&#125;(),n()&#125;(window,document); 2.修改_layout.swig 在\\themes\\next\\layout_layout.swig文件末尾添加： 12&lt;!-- 页面点击小红心 --&gt;&lt;script type&#x3D;&quot;text&#x2F;javascript&quot; src&#x3D;&quot;&#x2F;js&#x2F;src&#x2F;clicklove.js&quot;&gt;&lt;&#x2F;script&gt;","categories":[],"tags":[{"name":"建站 Next","slug":"建站-Next","permalink":"https://huaungwj.github.io/tags/%E5%BB%BA%E7%AB%99-Next/"}]},{"title":"本站的坑","slug":"blog","date":"2019-12-09T15:23:33.000Z","updated":"2020-04-10T12:41:05.147Z","comments":true,"path":"2019/12/09/blog/","link":"","permalink":"https://huaungwj.github.io/2019/12/09/blog/","excerpt":"部署本地环境： MacOS 10.14 环境:git, Node.js, hexo… 生成本地静态网站","text":"部署本地环境： MacOS 10.14 环境:git, Node.js, hexo… 生成本地静态网站 服务器环境： centos7 环境: git, Nginx, 创建git用户 略… 使用git自动化部署 yum install git yum install nginx 略.. 秘钥配置本地使用mac 终端$cd ~/.ssh如果没有该文件夹，将会提示：-bash: cd: /Users/ljm/.ssh: No such file or directory如果有该文件夹则会进入到该文件夹如果ssh文件夹里面没有内容，需要创建ssh秘钥。打开终端：输入ssh-keygen -t rsa -C xxx@xxx.com后回车(邮箱是你代码管理工具的邮箱名字)然后会提示Enter file in which to save the key，让你输入存放ssh秘钥的路径，默认是~/.ssh，所以直接回车即可。然后会提示输入密码和再次输入密码(好像和邮箱密码没关系，不过最好是记住或者存起来)回车，会提示创建完成（下图我输入了一次错误密码，所以提示重新输入） 123456789101112131415161718192021$ ssh-keygen -t rsaGenerating public&#x2F;private rsa key pair.Enter file in which to save the key (&#x2F;c&#x2F;Users&#x2F;cocoa&#x2F;.ssh&#x2F;id_rsa):Enter passphrase (empty for no passphrase):Enter same passphrase again:Your identification has been saved in &#x2F;c&#x2F;Users&#x2F;cocoa&#x2F;.ssh&#x2F;id_rsa.Your public key has been saved in &#x2F;c&#x2F;Users&#x2F;cocoa&#x2F;.ssh&#x2F;id_rsa.pub.The key fingerprint is:SHA256:aVu4RvVva6KAlg6j7IOrjxzUjjMPD8MJfZbRYzCVkDo cocoa@HotoThe key&#39;s randomart image is:+---[RSA 3072]----+| ++.. || .+. || .. + . || .E + . + . ||...o+ S . . ||+ +o &#x3D; + . || % .o + &#x3D; o ||oo@. &#x3D; . . .... ||&#x3D;&#x3D;&#x3D;+ . .. o. |+----[SHA256]-----+ $ ls ~/.sshid_rsa id_rsa.pub known_hosts 123456789101112131415161718在服务器上 切换至git用户&#96;mkdir ~&#x2F;.ssh&#96; &#96;vim ~&#x2F;.ssh&#x2F;authorized_keys&#96;将本地&#96;id_rsa.pub&#96;文件内容粘贴到服务器&#96;authorized_keys&#96;里面修改权限&#96;cd ~&#96;&#96;chmod 600 .ssh&#x2F;authorzied_keys&#96;&#96;chmod 700 .ssh&#96;#### 测试在本地上 使用&#96;GitBash&#96;测试是否能连接上服务器&#96;ssh -v git@serverip&#96;如果有错误提示 删除本地&#96;known_hosts&#96;文件里面纪录的服务器相关信息#### nginx安装 &#96;yum install nginx&#96; 过程略...使用 nginx -t 命令查看位置，一般为 &#x2F;etc&#x2F;nginx&#x2F;nginx.conf 使用 vim &#x2F;etc&#x2F;nginx&#x2F;nginx.conf 命令进行编辑，修改配置文件如下： server { listen 80 default_server; listen [::]:80 default_server; server_name www.hotococoa.com; # 修改为自己的域名 root /home/hexo; # 修改为网站的根目录 # Load configuration files for the default server block. include /etc/nginx/default.d/*.conf; location / { } error_page 404 /404.html; location = /40x.html { } error_page 500 502 503 504 /50x.html; location = /50x.html { }} 12345678910111213141516171819202122232425262728293031323334353637383940&#96;root&#96;为网站目录 就是部署上传的位置使用&#96;nginx -t&#96;检查配置语法&#96;systemctl restart nginx.service&#96;重启nginx 完.*** ## 评论区的坑#### 创建一个新仓库记住这个仓库名字 ![](&#x2F;img&#x2F;archive_img&#x2F;blog_pit1.png)#### 创建GitHub Application没创建的 [点这里申请](https:&#x2F;&#x2F;github.com&#x2F;settings&#x2F;applications&#x2F;new) 已创建的在&#96;Settings&#96; -&gt; &#96;Developer settings&#96; -&gt; &#96;OAuth Apps&#96;里面找 这个名字貌似随便填 反正没用上 ![](&#x2F;img&#x2F;archive_img&#x2F;blog_pit2.png)#### 填写config&#96;&#96;&#96; bash# Gitalk 评论插件（https:&#x2F;&#x2F;github.com&#x2F;gitalk&#x2F;gitalk）gitalk: # 是否自动展开评论框 autoExpand: false # 应用编号 clientID: &#39;2275782fd492bd7192d5&#39; # 步骤2 # 应用秘钥 clientSecret: &#39;4bdaa80e28e4a5764b22cae20807e6c39ff3be4d&#39; # 步骤2 # issue仓库名 repo: &#39;HexoGitalk&#39; # 步骤1 # Github名 owner: &#39;Hotobun&#39; # 后面自己填 # Github名 admin: [&#39;Hotobun&#39;] # Ensure uniqueness and length less than 50hexo id: location.pathname # Facebook-like distraction free mode distractionFreeMode: false 修改表格宽度1234567# diaspora.css line 220# 修改 table-layout # 源文件.content table &#123;margin:15px 0;border-collapse:collapse;display:table;width:100%;table-layout:fixed;word-wrap:break-word;&#125; # 修改后.content table &#123;margin:15px 0;border-collapse:collapse;display:table;width:100%;table-layout:automatic;word-wrap:break-word;&#125;","categories":[],"tags":[{"name":"建站","slug":"建站","permalink":"https://huaungwj.github.io/tags/%E5%BB%BA%E7%AB%99/"}]},{"title":"markdown基本语法","slug":"markdown","date":"2019-12-04T09:51:56.000Z","updated":"2020-04-10T10:28:49.611Z","comments":true,"path":"2019/12/04/markdown/","link":"","permalink":"https://huaungwj.github.io/2019/12/04/markdown/","excerpt":"这是一级标题这是二级标题","text":"这是一级标题这是二级标题 这是三级标题这是四级标题这是五级标题这是六级标题这是加粗的文字这是倾斜的文字`这是斜体加粗的文字这是加删除线的文字 这是引用的内容 这是引用的内容 这是引用的内容 三个或者以上的符号会变成分割线 图片![图片alt](图片地址 ‘’图片title’’)示例： 超链接超链接名title可加可不加示例：百度 列表无序列表： 列表内容 列表内容 列表内容 有序列表：1.列表内容2.列表内容3.列表内容 列表嵌套上一级和下一级之间敲三个空格即可 表格 表头 表头 表头 内容 内容 内容 内容 内容 内容 第二行分割表头和内容。有一个就行，为了对齐，多加了几个文字默认居左-两边加：表示文字居中-右边加：表示文字居右注：原生的语法两边都要用 | 包起来。此处省略 代码语法：单行代码：代码之间分别用一个反引号包起来代码块 ：代码之间分别用三个反引号包起来，且两边的反引号单独占一行hello world!\\n #include &lt;stdio.h&gt; int main (void){ printf(&quot;hello world!\\n&quot;); return 0; }","categories":[{"name":"基础","slug":"基础","permalink":"https://huaungwj.github.io/categories/%E5%9F%BA%E7%A1%80/"}],"tags":[{"name":"blog","slug":"blog","permalink":"https://huaungwj.github.io/tags/blog/"},{"name":"markdown","slug":"markdown","permalink":"https://huaungwj.github.io/tags/markdown/"}]},{"title":"MySql","slug":"sql","date":"2019-12-04T09:51:56.000Z","updated":"2020-04-10T10:08:51.858Z","comments":true,"path":"2019/12/04/sql/","link":"","permalink":"https://huaungwj.github.io/2019/12/04/sql/","excerpt":"创建数据库指定urf-8编码 CREATE DATABASE databasename DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci;","text":"创建数据库指定urf-8编码 CREATE DATABASE databasename DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci; 删除数据库 drop databases &lt;databasename&gt;; &gt;&gt;&gt; drop databases pwd; 创建数据表通用语法: CREATE TABLE table_name (column_name column_type);1234567CREATE TABLE IF NOT EXISTS &#96;runoob_tbl&#96;( &#96;runoob_id&#96; INT UNSIGNED AUTO_INCREMENT, &#x2F;&#x2F; int无符号自增 &#96;runoob_title&#96; VARCHAR(100) NOT NULL, &#96;runoob_author&#96; VARCHAR(40) NOT NULL, &#96;submission_date&#96; DATE, PRIMARY KEY ( &#96;runoob_id&#96; ))ENGINE&#x3D;InnoDB DEFAULT CHARSET&#x3D;utf8; 删除数据表 DROP TABLE tableanme ; 插入数据123INSERT INTO table_name ( field1, field2,...fieldN ) VALUES ( value1, value2,...valueN ); 查询数据1234SELECT column_name,column_nameFROM table_name[WHERE Clause][LIMIT N][ OFFSET M] 1.查询语句中你可以使用一个或者多个表，表之间使用逗号(,)分割，并使用WHERE语句来设定查询条件。2.SELECT 命令可以读取一条或者多条记录。3.你可以使用星号（*）来代替其他字段，SELECT语句会返回表的所有字段数据4.你可以使用 WHERE 语句来包含任何条件。5.你可以使用 LIMIT 属性来设定返回的记录数。6.你可以通过OFFSET指定SELECT语句开始查询的数据偏移量。默认情况下偏移量为0。 查询去重1select distinct 字段名 from table; concat函数 功能：拼接字符 &quot;1&quot;+&quot;23&quot; = &quot;123&quot;1select concat (字段1,字段2 ) from table; ifnull函数： 功能：判断某字段或表达式是否为null，如果为null 返回指定的值，否则返回原本的值12# 如果&#96;hello&#96;列为空则返回0select ifnull(hello, 0) from employees; isnull函数 功能：判断某字段或表达式是否为null，如果是，则返回1，否则返回01select id, isnull(root) from table; 条件查询 where字句用于筛选符合条件的数据 将不满足条件的行过滤12select * from table where id &#x3D; 1 or data &#x3D; &#39;hello&#39; ; 运算符 说明 BETWEEN…AND… 现在某一区间的值(包含头与结尾) IN(set) 现在在in列表中的值 例：in(100,200) LIKE通配符 模糊查询，Like语句中有两个通配符：% 用来匹配多个字符；例name like “%a”; “_”用来表示任意一个字符; IS NULL 判断是否为空， is not null; 判断不为空 AND(&amp;&amp;) 多个条件同时成立 OR(||) 多个条件任意一个成立 not(!) 不成立，例：where not(salary&gt;100); 排序查询ORDER BY 使用ORDER BY 子句排序 ASC(ascend) 默认 升序 DESC(descend) 降序12345# 查询名字含有a的行 按mid进行降序排序 显示前20行select * from table where name like &quot;%a%&quot; order by mid desc limit 20; 分组查询123456select 分组函数，分组后的字段from 表where 筛选条件group by 分组的字段having 分组后的筛选order by 排序列表 简易备份与恢复本机可忽略主机名与端口备份：mysqldump -h主机名 -P端口 -u用户名 -p密码 --database 数据库名 &gt; 文件名.sql恢复：mysql -u用户名 -p密码 数据库名 &lt; 文件名.sql ;","categories":[{"name":"基础","slug":"基础","permalink":"https://huaungwj.github.io/categories/%E5%9F%BA%E7%A1%80/"}],"tags":[{"name":"mysql","slug":"mysql","permalink":"https://huaungwj.github.io/tags/mysql/"}]}],"categories":[{"name":"基础","slug":"基础","permalink":"https://huaungwj.github.io/categories/%E5%9F%BA%E7%A1%80/"}],"tags":[{"name":"建站","slug":"建站","permalink":"https://huaungwj.github.io/tags/%E5%BB%BA%E7%AB%99/"},{"name":"建站 Next","slug":"建站-Next","permalink":"https://huaungwj.github.io/tags/%E5%BB%BA%E7%AB%99-Next/"},{"name":"blog","slug":"blog","permalink":"https://huaungwj.github.io/tags/blog/"},{"name":"markdown","slug":"markdown","permalink":"https://huaungwj.github.io/tags/markdown/"},{"name":"mysql","slug":"mysql","permalink":"https://huaungwj.github.io/tags/mysql/"}]}