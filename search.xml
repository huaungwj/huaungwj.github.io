<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>本站的坑</title>
    <url>/2019/12/09/blog/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h2><h4 id="本地环境："><a href="#本地环境：" class="headerlink" title="本地环境："></a>本地环境：</h4><ul>
<li>MacOS 10.14</li>
<li>环境:git, Node.js, hexo…</li>
<li>生成本地静态网站<a id="more"></a>
<h4 id="服务器环境："><a href="#服务器环境：" class="headerlink" title="服务器环境："></a>服务器环境：</h4></li>
<li>centos7</li>
<li>环境: git, Nginx, 创建git用户 略…</li>
<li>使用git自动化部署</li>
<li><code>yum install git</code></li>
<li><code>yum install nginx</code> 略..</li>
</ul>
<h4 id="秘钥配置"><a href="#秘钥配置" class="headerlink" title="秘钥配置"></a>秘钥配置</h4><p>本地使用mac 终端<br><code>$cd ~/.ssh</code><br>如果没有该文件夹，将会提示：-bash: cd: /Users/ljm/.ssh: No such file or directory<br>如果有该文件夹则会进入到该文件夹<br>如果ssh文件夹里面没有内容，需要创建ssh秘钥。<br>打开终端：<br>输入<br><code>ssh-keygen -t rsa -C xxx@xxx.com</code><br>后回车(邮箱是你代码管理工具的邮箱名字)<br>然后会提示Enter file in which to save the key，让你输入存放ssh秘钥的路径，默认是~/.ssh，所以直接回车即可。<br>然后会提示输入密码和再次输入密码(好像和邮箱密码没关系，不过最好是记住或者存起来)<br>回车，会提示创建完成（下图我输入了一次错误密码，所以提示重新输入）</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ ssh-keygen -t rsa</span><br><span class="line">Generating public&#x2F;private rsa key pair.</span><br><span class="line">Enter file in which to save the key (&#x2F;c&#x2F;Users&#x2F;cocoa&#x2F;.ssh&#x2F;id_rsa):</span><br><span class="line">Enter passphrase (empty for no passphrase):</span><br><span class="line">Enter same passphrase again:</span><br><span class="line">Your identification has been saved in &#x2F;c&#x2F;Users&#x2F;cocoa&#x2F;.ssh&#x2F;id_rsa.</span><br><span class="line">Your public key has been saved in &#x2F;c&#x2F;Users&#x2F;cocoa&#x2F;.ssh&#x2F;id_rsa.pub.</span><br><span class="line">The key fingerprint is:</span><br><span class="line">SHA256:aVu4RvVva6KAlg6j7IOrjxzUjjMPD8MJfZbRYzCVkDo cocoa@Hoto</span><br><span class="line">The key&#39;s randomart image is:</span><br><span class="line">+---[RSA 3072]----+</span><br><span class="line">|    ++..         |</span><br><span class="line">|    .+.          |</span><br><span class="line">|   .. +   .      |</span><br><span class="line">| .E  + . + .     |</span><br><span class="line">|...o+   S . .    |</span><br><span class="line">|+ +o   &#x3D; +   .   |</span><br><span class="line">| % .o + &#x3D;     o  |</span><br><span class="line">|oo@. &#x3D; . .  .... |</span><br><span class="line">|&#x3D;&#x3D;&#x3D;+  .   .. o.  |</span><br><span class="line">+----[SHA256]-----+</span><br></pre></td></tr></table></figure>
<p>$ ls ~/.ssh<br>id_rsa  id_rsa.pub  known_hosts</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">在服务器上 切换至git用户</span><br><span class="line">&#96;mkdir ~&#x2F;.ssh&#96;  </span><br><span class="line">&#96;vim ~&#x2F;.ssh&#x2F;authorized_keys&#96;</span><br><span class="line">将本地&#96;id_rsa.pub&#96;文件内容粘贴到服务器&#96;authorized_keys&#96;里面</span><br><span class="line">修改权限</span><br><span class="line">&#96;cd ~&#96;</span><br><span class="line">&#96;chmod 600 .ssh&#x2F;authorzied_keys&#96;</span><br><span class="line">&#96;chmod 700 .ssh&#96;</span><br><span class="line"></span><br><span class="line">#### 测试</span><br><span class="line">在本地上 使用&#96;GitBash&#96;测试是否能连接上服务器</span><br><span class="line">&#96;ssh -v git@serverip&#96;</span><br><span class="line">如果有错误提示 删除本地&#96;known_hosts&#96;文件里面纪录的服务器相关信息</span><br><span class="line"></span><br><span class="line">#### nginx</span><br><span class="line">安装 &#96;yum install nginx&#96; 过程略...</span><br><span class="line">使用 nginx -t 命令查看位置，一般为 &#x2F;etc&#x2F;nginx&#x2F;nginx.conf    </span><br><span class="line">使用 vim &#x2F;etc&#x2F;nginx&#x2F;nginx.conf 命令进行编辑，修改配置文件如下：</span><br></pre></td></tr></table></figure>
<p>server {<br>    listen       80 default_server;<br>    listen       [::]:80 default_server;<br>    server_name  <a href="http://www.hotococoa.com" target="_blank" rel="external nofollow noopener noreferrer">www.hotococoa.com</a>;    # 修改为自己的域名<br>    root         /home/hexo;    # 修改为网站的根目录</p>
<pre><code># Load configuration files for the default server block.
include /etc/nginx/default.d/*.conf;

location / {
}
error_page 404 /404.html;
    location = /40x.html {
}
error_page 500 502 503 504 /50x.html;
    location = /50x.html {
}</code></pre><p>}</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#96;root&#96;为网站目录 就是部署上传的位置</span><br><span class="line">使用&#96;nginx -t&#96;检查配置语法</span><br><span class="line">&#96;systemctl restart nginx.service&#96;重启nginx </span><br><span class="line">完.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">*** </span><br><span class="line">## 评论区的坑</span><br><span class="line">#### 创建一个新仓库</span><br><span class="line">记住这个仓库名字 </span><br><span class="line">![](&#x2F;img&#x2F;archive_img&#x2F;blog_pit1.png)</span><br><span class="line"></span><br><span class="line">#### 创建GitHub Application</span><br><span class="line">没创建的 [点这里申请](https:&#x2F;&#x2F;github.com&#x2F;settings&#x2F;applications&#x2F;new)  </span><br><span class="line">已创建的在&#96;Settings&#96; -&gt; &#96;Developer settings&#96; -&gt; &#96;OAuth Apps&#96;里面找  </span><br><span class="line">这个名字貌似随便填 反正没用上  </span><br><span class="line">![](&#x2F;img&#x2F;archive_img&#x2F;blog_pit2.png)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#### 填写config</span><br><span class="line"></span><br><span class="line">&#96;&#96;&#96; bash</span><br><span class="line"># Gitalk 评论插件（https:&#x2F;&#x2F;github.com&#x2F;gitalk&#x2F;gitalk）</span><br><span class="line">gitalk:</span><br><span class="line">    # 是否自动展开评论框</span><br><span class="line">    autoExpand: false</span><br><span class="line">    # 应用编号</span><br><span class="line">    clientID: &#39;2275782fd492bd7192d5&#39;  # 步骤2 </span><br><span class="line">    # 应用秘钥</span><br><span class="line">    clientSecret: &#39;4bdaa80e28e4a5764b22cae20807e6c39ff3be4d&#39;   # 步骤2</span><br><span class="line">    # issue仓库名</span><br><span class="line">    repo: &#39;HexoGitalk&#39;   # 步骤1 </span><br><span class="line">    # Github名</span><br><span class="line">    owner: &#39;Hotobun&#39;     # 后面自己填 </span><br><span class="line">    # Github名</span><br><span class="line">    admin: [&#39;Hotobun&#39;]</span><br><span class="line">    # Ensure uniqueness and length less than 50hexo  </span><br><span class="line">    id: location.pathname</span><br><span class="line">    # Facebook-like distraction free mode</span><br><span class="line">    distractionFreeMode: false</span><br></pre></td></tr></table></figure>

<hr>
<h2 id="修改表格宽度"><a href="#修改表格宽度" class="headerlink" title="修改表格宽度"></a>修改表格宽度</h2><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"># <span class="selector-tag">diaspora</span><span class="selector-class">.css</span> <span class="selector-tag">line</span> 220</span><br><span class="line"># 修改 <span class="selector-tag">table-layout</span> </span><br><span class="line"># 源文件</span><br><span class="line"><span class="selector-class">.content</span> <span class="selector-tag">table</span> &#123;<span class="attribute">margin</span>:<span class="number">15px</span> <span class="number">0</span>;<span class="attribute">border-collapse</span>:collapse;<span class="attribute">display</span>:table;<span class="attribute">width</span>:<span class="number">100%</span>;<span class="attribute">table-layout</span>:fixed;<span class="attribute">word-wrap</span>:break-word;&#125;</span><br><span class="line"> </span><br><span class="line"># 修改后</span><br><span class="line"><span class="selector-class">.content</span> <span class="selector-tag">table</span> &#123;<span class="attribute">margin</span>:<span class="number">15px</span> <span class="number">0</span>;<span class="attribute">border-collapse</span>:collapse;<span class="attribute">display</span>:table;<span class="attribute">width</span>:<span class="number">100%</span>;<span class="attribute">table-layout</span>:automatic;<span class="attribute">word-wrap</span>:break-word;&#125;</span><br></pre></td></tr></table></figure>

<p><img src="/img/archive_img/blog_table1.png" alt><br><img src="/img/archive_img/blog_table2.png" alt></p>
]]></content>
      <tags>
        <tag>建站</tag>
      </tags>
  </entry>
  <entry>
    <title>pjax</title>
    <url>/2020/04/10/pjax/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id><a href="#" class="headerlink" title></a><span class="p red">实现pjax</span></h2><p>感谢大佬的博客开源，让我能参考源代码进行修改：<a href="https://sunhang.top/2019/12/20/pjax/" target="_blank" rel="external nofollow noopener noreferrer" title="Material X主题pjax使用">pjax使用</a><br>感谢大佬的讲解 ：<a href="https://sunhang.top/2019/12/20/pjax/" target="_blank" rel="external nofollow noopener noreferrer">用pjax让你的页面加载飞起来！</a></p>
<hr>
<a id="more"></a>
<p>在layout/_partial/head.ejs的末尾 的上方引用pjax</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;pjax&#x2F;pjax.js&quot;&gt;&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure>
<p><img src="/img/wenzhang/pjax_1.png" alt="图片" title="cocoa"><br>在layout/layout.ejs的末尾的上方插入代码</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">var pjax &#x3D; new Pjax(&#123;</span><br><span class="line">  elements: &quot;a&quot;,</span><br><span class="line">  selectors: [</span><br><span class="line">    &quot;title&quot;, &#x2F;&#x2F;pjax加载标题</span><br><span class="line">    &quot;.l_main&quot;, &#x2F;&#x2F;pjax加载主内容</span><br><span class="line">    &quot;.l_side&quot;, &#x2F;&#x2F;pjax加载侧边栏</span><br><span class="line">    &quot;.switcher .h-list&quot;, &#x2F;&#x2F; 使手机端的搜索框与菜单栏生效</span><br><span class="line">  ]</span><br><span class="line">&#125;)</span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure>
<p><img src="/img/wenzhang/pjax_2.png" alt="图片" title="cocoa"><br>elements选择触发器，即点击什么来触发pjax（只能用a或者form），a为链接。</p>
<p>selectors根据css选择器来选择更新的节点（即当触发elements时哪些内容会刷新，其余部分保持不变）<br>可以用节点、类、id等选择元素。用法参考：<br><a href="https://www.runoob.com/cssref/css-selectors.html" target="_blank" rel="external nofollow noopener noreferrer">css选择器</a><br>这里我设置的为：点击链接，则刷新标题、类为l_main与l_side的元素（页面内容与侧边栏）会刷新，其余不变。</p>
<h2 id="-1"><a href="#-1" class="headerlink" title></a><span class="p red">pjax优化-自动生成Fancybox</span></h2><p>在定义pjax的脚本代码中插入语句（放在<script>与</script>中）</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;加载fancybox</span><br><span class="line">function LoadFancybox()&#123;</span><br><span class="line">  $(&quot;.article-entry&quot;).find(&quot;img&quot;).each(function () &#123;</span><br><span class="line">    &#x2F;&#x2F;渲染fancy box</span><br><span class="line">    var t &#x3D; document.createElement(&quot;a&quot;);</span><br><span class="line">    $(t).attr(&quot;data-fancybox&quot;, &quot;gallery&quot;),</span><br><span class="line">    $(t).attr(&quot;href&quot;, $(this).attr(&quot;src&quot;)),</span><br><span class="line">    $(t).attr(&quot;margin&quot;,&quot;0 auto&quot;),</span><br><span class="line">    $(this).wrap(t)</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; pjax加载结束后执行函数</span><br><span class="line">document.addEventListener(&#39;pjax:complete&#39;, function ()&#123;</span><br><span class="line">  LoadFancybox();</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 窗口监听load(加载、刷新)事件，执行LoadFancybox()函数</span><br><span class="line">window.addEventListener(&#39;load&#39;,function()&#123;</span><br><span class="line">  LoadFancybox();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<p>插入后结果如图：<br><img src="/img/wenzhang/pjax_3.png" alt="图片" title="cocoa"><br>修改后发现实现了fancybox，但是图片不再居中，故进行修改。</p>
<p>打开source/css/_layout/main.styl</p>
<p>搜索img 找到位于l_main&gt;post&gt;a下的img，将display: inline注释</p>
<p><img src="/img/wenzhang/pjax_4.png" alt="图片" title="cocoa"></p>
<hr>
<p><strong>BUG:</strong>- 放大图片再关闭后，页面位置与放大前不对应，会返回到放大前一张图片时的位置 。<br>实现pjax后发现导航栏在点击不同部分时，主题的下划线不会改变，进行修改没有修改成，故直接将CSS代码注释</p>
<p>打开source/css/_layout/navbar.styl 搜索&amp;:active,&amp;.active 将该部分代码注释<br><img src="/img/wenzhang/pjax_5.png" alt="图片" title="cocoa"></p>
<h2 id="-2"><a href="#-2" class="headerlink" title></a><span class="p red">pjax刷新评论</span></h2><p><strong>问题：</strong>实现pjax后发现通过pjax刷新页面后评论无法成功加载，推测是因为评论由js脚本引入，pjax刷新页面不会加载js。<br><strong>解决思路：</strong>当pjax执行完成后再次调用评论js脚本来生成评论。</p>
<p>在pjax脚本中插入以下代码，其中调用脚本的方式有两种，用哪一个都可以。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">function LoadValine()&#123;</span><br><span class="line">    &#x2F;&#x2F; 两种调用方式，一个调用配置里的js路径，一个调用本地，用哪个都可以</span><br><span class="line"> &#x2F;&#x2F; $.getScript(&quot;&lt;%&#x3D; theme.comments.valine.js %&gt;&quot;, function() &#123;</span><br><span class="line">    $.getScript(&quot;&#x2F;js&#x2F;Valine.js&quot;, function() &#123;</span><br><span class="line">        </span><br><span class="line">      &#x2F;&#x2F; 生成评论的代码</span><br><span class="line">      var GUEST_INFO &#x3D; [&#39;nick&#39;,&#39;mail&#39;,&#39;link&#39;];</span><br><span class="line">      var guest_info &#x3D; &#39;&lt;%&#x3D; theme.comments.valine.meta %&gt;&#39;.split(&#39;,&#39;).filter(function(item)&#123;</span><br><span class="line">        return GUEST_INFO.indexOf(item) &gt; -1</span><br><span class="line">      &#125;);</span><br><span class="line">      var notify &#x3D; &#39;&lt;%&#x3D; theme.comments.valine.notify %&gt;&#39; &#x3D;&#x3D; true;</span><br><span class="line">      var verify &#x3D; &#39;&lt;%&#x3D; theme.comments.valine.verify %&gt;&#39; &#x3D;&#x3D; true;</span><br><span class="line">      var valine &#x3D; new Valine();</span><br><span class="line">      valine.init(&#123;</span><br><span class="line">        el: &#39;#valine_container&#39;,</span><br><span class="line">        notify: notify,</span><br><span class="line">        verify: verify,</span><br><span class="line">        guest_info: guest_info,</span><br><span class="line">        &lt;% if (page.valine &amp;&amp; page.valine.path) &#123; %&gt;</span><br><span class="line">          path: &quot;&lt;%&#x3D; page.valine.path %&gt;&quot;,</span><br><span class="line">        &lt;% &#125; else if (theme.comments.valine.path) &#123; %&gt;</span><br><span class="line">          path: &quot;&lt;%&#x3D; theme.comments.valine.path %&gt;&quot;,</span><br><span class="line">        &lt;% &#125; %&gt;</span><br><span class="line">        appId: &quot;&lt;%&#x3D; theme.comments.valine.appId %&gt;&quot;,</span><br><span class="line">        appKey: &quot;&lt;%&#x3D; theme.comments.valine.appKey %&gt;&quot;,</span><br><span class="line">        placeholder: &quot;&lt;%&#x3D; (page.valine &amp;&amp; page.valine.placeholder) ? page.valine.placeholder : theme.comments.valine.placeholder %&gt;&quot;,</span><br><span class="line">        pageSize:&#39;&lt;%&#x3D; theme.comments.valine.pageSize %&gt;&#39;,</span><br><span class="line">        avatar:&#39;&lt;%&#x3D; theme.comments.valine.avatar %&gt;&#39;,</span><br><span class="line">        lang:&#39;&lt;%&#x3D; theme.comments.valine.lang %&gt;&#39;,</span><br><span class="line">        visitor: &#39;&lt;%- theme.comments.valine.visitor %&gt;&#39;,</span><br><span class="line">        highlight:&#39;&lt;%&#x3D; theme.comments.valine.highlight %&gt;&#39;</span><br><span class="line">      &#125;)</span><br><span class="line">	&#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>然后在监听pjax完成后的函数里调用函数</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; 加载pjax后执行的函数</span><br><span class="line">document.addEventListener(&#39;pjax:complete&#39;, function ()&#123;</span><br><span class="line">    LoadFancybox();</span><br><span class="line">    &#x2F;&#x2F; 调用刚刚设置的函数</span><br><span class="line">    LoadValine();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<p>结果应该如图：<br><img src="/img/wenzhang/pjax_6.png" alt="图片" title="cocoa"><br><strong>源码位置：</strong> layout_partial\scripts.ejs，上述代码中生成评论的部分即红框内的部分<br><img src="/img/wenzhang/pjax_7.png" alt="图片" title="cocoa"></p>
]]></content>
      <tags>
        <tag>建站</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo NexT主题添加点击爱心效果</title>
    <url>/2020/04/08/clicklove/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="1-创建js文件"><a href="#1-创建js文件" class="headerlink" title="1.创建js文件"></a>1.创建js文件</h2><p>在/themes/next/source/js/src下新建文件 clicklove.js ，接着把该链接下的代码拷贝粘贴到 clicklove.js 文件中。<br>代码如下:</p>
<a id="more"></a>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">!function(e,t,a)&#123;function n()&#123;c(&quot;.heart&#123;width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);&#125;.heart:after,.heart:before&#123;content: &#39;&#39;;width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: fixed;&#125;.heart:after&#123;top: -5px;&#125;.heart:before&#123;left: -5px;&#125;&quot;),o(),r()&#125;function r()&#123;for(var e&#x3D;0;e&lt;d.length;e++)d[e].alpha&lt;&#x3D;0?(t.body.removeChild(d[e].el),d.splice(e,1)):(d[e].y--,d[e].scale+&#x3D;.004,d[e].alpha-&#x3D;.013,d[e].el.style.cssText&#x3D;&quot;left:&quot;+d[e].x+&quot;px;top:&quot;+d[e].y+&quot;px;opacity:&quot;+d[e].alpha+&quot;;transform:scale(&quot;+d[e].scale+&quot;,&quot;+d[e].scale+&quot;) rotate(45deg);background:&quot;+d[e].color+&quot;;z-index:99999&quot;);requestAnimationFrame(r)&#125;function o()&#123;var t&#x3D;&quot;function&quot;&#x3D;&#x3D;typeof e.onclick&amp;&amp;e.onclick;e.onclick&#x3D;function(e)&#123;t&amp;&amp;t(),i(e)&#125;&#125;function i(e)&#123;var a&#x3D;t.createElement(&quot;div&quot;);a.className&#x3D;&quot;heart&quot;,d.push(&#123;el:a,x:e.clientX-5,y:e.clientY-5,scale:1,alpha:1,color:s()&#125;),t.body.appendChild(a)&#125;function c(e)&#123;var a&#x3D;t.createElement(&quot;style&quot;);a.type&#x3D;&quot;text&#x2F;css&quot;;try&#123;a.appendChild(t.createTextNode(e))&#125;catch(t)&#123;a.styleSheet.cssText&#x3D;e&#125;t.getElementsByTagName(&quot;head&quot;)[0].appendChild(a)&#125;function s()&#123;return&quot;rgb(&quot;+~~(255*Math.random())+&quot;,&quot;+~~(255*Math.random())+&quot;,&quot;+~~(255*Math.random())+&quot;)&quot;&#125;var d&#x3D;[];e.requestAnimationFrame&#x3D;function()&#123;return e.requestAnimationFrame||e.webkitRequestAnimationFrame||e.mozRequestAnimationFrame||e.oRequestAnimationFrame||e.msRequestAnimationFrame||function(e)&#123;setTimeout(e,1e3&#x2F;60)&#125;&#125;(),n()&#125;(window,document);</span><br></pre></td></tr></table></figure>
<h2 id="2-修改-layout-swig"><a href="#2-修改-layout-swig" class="headerlink" title="2.修改_layout.swig"></a>2.修改_layout.swig</h2><p> 在\themes\next\layout_layout.swig文件末尾添加：<br> <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!-- 页面点击小红心 --&gt;</span><br><span class="line">&lt;script type&#x3D;&quot;text&#x2F;javascript&quot; src&#x3D;&quot;&#x2F;js&#x2F;src&#x2F;clicklove.js&quot;&gt;&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure></p>
]]></content>
      <tags>
        <tag>建站 Next</tag>
      </tags>
  </entry>
  <entry>
    <title>markdown基本语法</title>
    <url>/2019/12/04/markdown/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="这是一级标题"><a href="#这是一级标题" class="headerlink" title="这是一级标题"></a>这是一级标题</h1><h2 id="这是二级标题"><a href="#这是二级标题" class="headerlink" title="这是二级标题"></a>这是二级标题</h2><a id="more"></a>
<h3 id="这是三级标题"><a href="#这是三级标题" class="headerlink" title="这是三级标题"></a>这是三级标题</h3><h4 id="这是四级标题"><a href="#这是四级标题" class="headerlink" title="这是四级标题"></a>这是四级标题</h4><h5 id="这是五级标题"><a href="#这是五级标题" class="headerlink" title="这是五级标题"></a>这是五级标题</h5><h6 id="这是六级标题"><a href="#这是六级标题" class="headerlink" title="这是六级标题"></a>这是六级标题</h6><p><strong>这是加粗的文字</strong><br><em>这是倾斜的文字</em>`<br><strong><em>这是斜体加粗的文字</em></strong><br><del>这是加删除线的文字</del>  </p>
<blockquote>
<p>这是引用的内容    </p>
<blockquote>
<p>这是引用的内容    </p>
<blockquote>
<blockquote>
<blockquote>
<blockquote>
<blockquote>
<blockquote>
<blockquote>
<blockquote>
<p>这是引用的内容    </p>
</blockquote>
</blockquote>
</blockquote>
</blockquote>
</blockquote>
</blockquote>
</blockquote>
</blockquote>
</blockquote>
</blockquote>
<h2 id="三个或者以上的符号会变成分割线"><a href="#三个或者以上的符号会变成分割线" class="headerlink" title="三个或者以上的符号会变成分割线"></a>三个或者以上的符号会变成分割线</h2><hr>
<hr>
<hr>
<hr>
<h2 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h2><p>![图片alt](图片地址 ‘’图片title’’)<br>示例：<br><img src="/static/img/number/5.jpg" alt="图片" title="cocoa"></p>
<h2 id="超链接"><a href="#超链接" class="headerlink" title="超链接"></a>超链接</h2><p><a href="超链接地址" title="超链接title">超链接名</a><br>title可加可不加<br>示例：<br><a href="http://www.baidu.com" target="_blank" rel="external nofollow noopener noreferrer">百度</a></p>
<h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><p>无序列表：</p>
<ul>
<li>列表内容</li>
</ul>
<ul>
<li>列表内容</li>
</ul>
<ul>
<li>列表内容</li>
</ul>
<p>有序列表：<br>1.列表内容<br>2.列表内容<br>3.列表内容</p>
<p>列表嵌套<br>上一级和下一级之间敲三个空格即可</p>
<h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><table>
<thead>
<tr>
<th>表头</th>
<th align="center">表头</th>
<th align="right">表头</th>
</tr>
</thead>
<tbody><tr>
<td>内容</td>
<td align="center">内容</td>
<td align="right">内容</td>
</tr>
<tr>
<td>内容</td>
<td align="center">内容</td>
<td align="right">内容</td>
</tr>
</tbody></table>
<p>第二行分割表头和内容。<br>有一个就行，为了对齐，多加了几个<br>文字默认居左<br>-两边加：表示文字居中<br>-右边加：表示文字居右<br>注：原生的语法两边都要用 | 包起来。此处省略</p>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p>语法：<br>单行代码：代码之间分别用一个反引号包起来<br>代码块  ：代码之间分别用三个反引号包起来，且两边的反引号单独占一行<br><code>hello world!\n</code>   </p>
<pre><code>#include &lt;stdio.h&gt;
int main (void){
  printf(&quot;hello world!\n&quot;);
  return 0;
}</code></pre>]]></content>
      <categories>
        <category>基础</category>
      </categories>
      <tags>
        <tag>blog</tag>
        <tag>markdown</tag>
      </tags>
  </entry>
  <entry>
    <title>MySql</title>
    <url>/2019/12/04/sql/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="创建数据库"><a href="#创建数据库" class="headerlink" title="创建数据库"></a>创建数据库</h2><p>指定urf-8编码  </p>
<ul>
<li><code>CREATE DATABASE databasename DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci;</code><a id="more"></a>

</li>
</ul>
<h2 id="删除数据库"><a href="#删除数据库" class="headerlink" title="删除数据库"></a>删除数据库</h2><ul>
<li><code>drop databases &lt;databasename&gt;;</code></li>
<li><code>&gt;&gt;&gt; drop databases pwd;</code></li>
</ul>
<h2 id="创建数据表"><a href="#创建数据表" class="headerlink" title="创建数据表"></a>创建数据表</h2><p>通用语法:</p>
<ul>
<li><code>CREATE TABLE table_name (column_name column_type);</code><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">CREATE TABLE IF NOT EXISTS &#96;runoob_tbl&#96;(</span><br><span class="line">   &#96;runoob_id&#96; INT UNSIGNED AUTO_INCREMENT,   &#x2F;&#x2F; int无符号自增</span><br><span class="line">   &#96;runoob_title&#96; VARCHAR(100) NOT NULL,      </span><br><span class="line">   &#96;runoob_author&#96; VARCHAR(40) NOT NULL,      </span><br><span class="line">   &#96;submission_date&#96; DATE,</span><br><span class="line">   PRIMARY KEY ( &#96;runoob_id&#96; )</span><br><span class="line">)ENGINE&#x3D;InnoDB DEFAULT CHARSET&#x3D;utf8;</span><br></pre></td></tr></table></figure>

</li>
</ul>
<h2 id="删除数据表"><a href="#删除数据表" class="headerlink" title="删除数据表"></a>删除数据表</h2><ul>
<li><code>DROP TABLE tableanme ;</code>   </li>
</ul>
<h2 id="插入数据"><a href="#插入数据" class="headerlink" title="插入数据"></a>插入数据</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">INSERT INTO table_name ( field1, field2,...fieldN )</span><br><span class="line">                       VALUES</span><br><span class="line">                       ( value1, value2,...valueN );</span><br></pre></td></tr></table></figure>

<h2 id="查询数据"><a href="#查询数据" class="headerlink" title="查询数据"></a>查询数据</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">SELECT column_name,column_name</span><br><span class="line">FROM table_name</span><br><span class="line">[WHERE Clause]</span><br><span class="line">[LIMIT N][ OFFSET M]</span><br></pre></td></tr></table></figure>
<p>1.查询语句中你可以使用一个或者多个表，表之间使用逗号(,)分割，并使用WHERE语句来设定查询条件。<br>2.SELECT 命令可以读取一条或者多条记录。<br>3.你可以使用星号（*）来代替其他字段，SELECT语句会返回表的所有字段数据<br>4.你可以使用 WHERE 语句来包含任何条件。<br>5.你可以使用 LIMIT 属性来设定返回的记录数。<br>6.你可以通过OFFSET指定SELECT语句开始查询的数据偏移量。默认情况下偏移量为0。  </p>
<h2 id="查询去重"><a href="#查询去重" class="headerlink" title="查询去重"></a>查询去重</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select distinct 字段名 from table;</span><br></pre></td></tr></table></figure>

<h2 id="concat函数"><a href="#concat函数" class="headerlink" title="concat函数"></a>concat函数</h2><ul>
<li>功能：拼接字符 <code>&quot;1&quot;+&quot;23&quot; = &quot;123&quot;</code><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select concat (字段1,字段2 ) from table;</span><br></pre></td></tr></table></figure>

</li>
</ul>
<h2 id="ifnull函数："><a href="#ifnull函数：" class="headerlink" title="ifnull函数："></a>ifnull函数：</h2><ul>
<li>功能：判断某字段或表达式是否为null，如果为null 返回指定的值，否则返回原本的值<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 如果&#96;hello&#96;列为空则返回0</span><br><span class="line">select ifnull(hello, 0) from employees;</span><br></pre></td></tr></table></figure>

</li>
</ul>
<h2 id="isnull函数"><a href="#isnull函数" class="headerlink" title="isnull函数"></a>isnull函数</h2><ul>
<li>功能：判断某字段或表达式是否为null，如果是，则返回1，否则返回0<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select id, isnull(root) from table;</span><br></pre></td></tr></table></figure>

</li>
</ul>
<h2 id="条件查询"><a href="#条件查询" class="headerlink" title="条件查询"></a>条件查询</h2><ul>
<li>where字句<br>用于筛选符合条件的数据 将不满足条件的行过滤<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select * from table </span><br><span class="line">    where id &#x3D; 1 or data &#x3D; &#39;hello&#39; ;</span><br></pre></td></tr></table></figure>


</li>
</ul>
<table>
<thead>
<tr>
<th align="center">运算符</th>
<th align="center">说明</th>
</tr>
</thead>
<tbody><tr>
<td align="center">BETWEEN…AND…</td>
<td align="center">现在某一区间的值(包含头与结尾)</td>
</tr>
<tr>
<td align="center">IN(set)</td>
<td align="center">现在在in列表中的值 例：in(100,200)</td>
</tr>
<tr>
<td align="center">LIKE通配符</td>
<td align="center">模糊查询，Like语句中有两个通配符：% 用来匹配多个字符；例name like “%a”; “_”用来表示任意一个字符;</td>
</tr>
<tr>
<td align="center">IS NULL</td>
<td align="center">判断是否为空， is not null; 判断不为空</td>
</tr>
<tr>
<td align="center">AND(&amp;&amp;)</td>
<td align="center">多个条件同时成立</td>
</tr>
<tr>
<td align="center">OR(||)</td>
<td align="center">多个条件任意一个成立</td>
</tr>
<tr>
<td align="center">not(!)</td>
<td align="center">不成立，例：where not(salary&gt;100);</td>
</tr>
</tbody></table>
<h2 id="排序查询"><a href="#排序查询" class="headerlink" title="排序查询"></a>排序查询</h2><p>ORDER BY </p>
<ul>
<li>使用ORDER BY 子句排序<ul>
<li>ASC(ascend) 默认 升序</li>
<li>DESC(descend) 降序<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 查询名字含有a的行 按mid进行降序排序 显示前20行</span><br><span class="line">select * from table</span><br><span class="line">    where name like &quot;%a%&quot; </span><br><span class="line">    order by mid desc </span><br><span class="line">    limit 20;</span><br></pre></td></tr></table></figure>

</li>
</ul>
</li>
</ul>
<h2 id="分组查询"><a href="#分组查询" class="headerlink" title="分组查询"></a>分组查询</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select 分组函数，分组后的字段</span><br><span class="line">from 表</span><br><span class="line">where 筛选条件</span><br><span class="line">group by 分组的字段</span><br><span class="line">having 分组后的筛选</span><br><span class="line">order by 排序列表</span><br></pre></td></tr></table></figure>

<h2 id="简易备份与恢复"><a href="#简易备份与恢复" class="headerlink" title="简易备份与恢复"></a>简易备份与恢复</h2><p>本机可忽略主机名与端口<br>备份：<br><code>mysqldump -h主机名 -P端口 -u用户名 -p密码 --database 数据库名 &gt; 文件名.sql</code><br>恢复：<br><code>mysql -u用户名 -p密码 数据库名 &lt; 文件名.sql ;</code>  </p>
]]></content>
      <categories>
        <category>基础</category>
      </categories>
      <tags>
        <tag>mysql</tag>
      </tags>
  </entry>
</search>
